name: Create AWS Infastructure

on:
  workflow_dispatch:
    inputs:
      instance_name:
        description: "Type the name of the AWS EC2 "
        required: true
        type: string

      aws_region:
        description: "Type the AWS region "
        required: false
        type: string

      name_prefix:
        description: "Type prefixed to add AWS resource names"
        required: false
        type: string

      instance_type:
        description: "AwS EC2 instance types "
        required: false
        type: string

      ami:
        description: "The AMI of the EC2 instance "
        required: false
        type: string

jobs:
  CreateInf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
      - name: Terraform Init
        run: terraform init

      - name: Create variables file
        run: |
          echo "instance_name = \"${{ inputs.instance_name }}\"" >> variables.tfvars
          echo "aws_region = \"${{ inputs.aws_region }}\"" >> variables.tfvars
          echo "name_prefix = \"${{ inputs.name_prefix }}\"" >> variables.tfvars
          echo "instance_type = \"${{ inputs.instance_type }}\"" >> variables.tfvars
          echo "ami = \"${{ inputs.ami }}\"" >> variables.tfvars


      - name: Apply Terraform
        run: terraform apply -auto-approve -var-file=variables.tfvars -input=false
      - name: Get the Public IP of the EC2 instance
        run: terraform output public_ip
      - name: check the IP variable
        run: echo $IP
      - name: Test the website
        run: |
          IP=$(terraform output public_ip)
          curl http://$IP